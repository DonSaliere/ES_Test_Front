{"version":3,"sources":["components/Contacts/Modal.module.css","components/Login/Login.module.css","components/Profile/Profile.module.css","serviceWorker.js","Redux/auth-reducer.js","Redux/contacts-reducer.js","Redux/redux-store.js","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/Navbar/Navbar.jsx","components/Contacts/Modal.jsx","components/Table/Table.jsx","components/Contacts/Contacts.jsx","components/Contacts/ContactsContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","user","isAuth","ContactsData","id","name","surname","email","birthday","newNameText","newSurnameText","newEmailText","newbirthdayText","selectedID","selectedIDRowData","reducers","combineReducers","auth","state","action","type","contacts","newContacts","Math","max","map","i","filter","p","idx","findIndex","item","slice","newName","newSurname","newEmail","newBirthday","store","createStore","Profile","props","Fragment","className","container","onClick","logOut","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileContainer","dispatch","Login","username","password","errorMsg","checkCredentials","params","toLowerCase","handleSubmit","e","preventDefault","loginInCreator","setState","handleChange","target","value","s","onSubmit","onChange","placeholder","errorMessage","mapDispatchToProps","LoginContainer","NavBar","Example","useState","add","setShow","deleted","setShowDel","chenge","setChenge","handleCloseAdd","handleCloseDel","handleCloseChenge","newNameElement","createRef","newSurnameElement","newEmailElement","newBirthdayElement","onUpdateContacts","updateContact","onChangeTextName","current","updateContactNameText","onChangeSurnameText","updateContactSurnameText","onChangeEmailText","updateContactEmailText","onChangeBirthdayText","updateContactBirthdayText","onDeleteContacts","deleteContact","m","Button","btn","variant","Modal","show","onHide","Header","closeButton","Title","Body","ref","Footer","addContact","Table","now","Date","toISOString","DayMonth","title","data","columns","field","onRowClick","evt","selectedRow","idTabl","tableData","desc","updateContactId","options","rowStyle","rowData","backgroundColor","Contacts","ContactsContainer","idContact","idRow","updateContactIdCreator","updateContactNameTextCreator","sur","updateContactSurnameTextCreator","updateContactEmailTextCreator","updateContactBirthdayTextCreator","App","Navbar","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c99cbea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__1UD9S\",\"btn\":\"Modal_btn__2IDuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__3s4mk\",\"errorMessage\":\"Login_errorMessage__25Np2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__395ot\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const AUTH_LOG_IN = 'AUTH_LOG_IN';\r\nconst AUTH_LOG_OUT = 'AUTH_LOG_OUT';\r\n\r\nconst initialState = {\r\n  user: '',\r\n  isAuth: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isAuth: true\r\n      };\r\n    case AUTH_LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuth: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loginInCreator = (Login) => ({ type: AUTH_LOG_IN, user: Login });\r\nexport const logOutInCreator = () => ({ type: AUTH_LOG_OUT });","const ADD_CONTACT = 'ADD_CONTACT';\r\nconst DELETE_CONTACT = 'DELETE_CONTACT';\r\nconst UPDATE_NAME_TEXT = 'UPDATE_NAME_TEXT';\r\nconst UPDATE_SURNAME = 'UPDATE_SURNAME';\r\nconst UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nconst UPDATE_EMAIL = 'UPDATE_EMAIL';\r\nconst UPDATE_BIRTHDAY = 'UPDATE_BIRTHDAY';\r\nconst UPDATE_ID = 'UPDATE_ID';\r\n\r\n\r\n\r\nconst initialState = {\r\n  ContactsData: [\r\n    { id: 0, name: 'Михаил', surname: 'Белоусов', email: 'o@outlook.com', birthday: '06.05.1990' },\r\n    { id: 1, name: 'Руслан', surname: 'Лапин', email: 'hr6zdl@yandex.ru', birthday: '06.03.1992' },\r\n    { id: 2, name: 'Павел', surname: 'Исаков', email: 'kaft93x@outlook.com', birthday: '29.06.1995' },\r\n    { id: 3, name: 'Пётр', surname: 'Мельников', email: 'dcu@yandex.ru', birthday: '11.02.1998' },\r\n    { id: 4, name: 'Людовик', surname: 'Тетерин', email: '19dn@outlook.com', birthday: '25.06.1998' },\r\n    { id: 5, name: 'Витольд', surname: 'Алчевский', email: 'pa5h@mail.ru', birthday: '06.05.1998' },\r\n    { id: 6, name: 'Йомер', surname: 'Дзюба', email: '281av0@gmail.com', birthday: '31.03.2002' },\r\n    { id: 7, name: 'Филипп', surname: 'Жуков', email: '8edmfh@outlook.com', birthday: '13.02.2007' },\r\n    { id: 8, name: 'Дарий', surname: 'Титов', email: 'sfn13i@mail.ru', birthday: '22.04.2008' },\r\n    { id: 9, name: 'Цезарь', surname: 'Королёв', email: 'g0orc3x1@outlook.com', birthday: '14.12.2020' },\r\n    { id: 10, name: 'Алёна', surname: 'Скляренко', email: 'rv7bp@gmail.com', birthday: '17.10.1990' },\r\n    { id: 11, name: 'Мария', surname: 'Скляренко', email: '93@outlook.com', birthday: '01.09.1991' },\r\n    { id: 12, name: 'Эльвира', surname: 'Палий', email: 'er@gmail.com', birthday: '02.12.1991' },\r\n    { id: 13, name: 'Марта', surname: 'Савельева', email: 'o0my@gmail.com', birthday: '06.12.1993' },\r\n    { id: 14, name: 'Хильда', surname: 'Никонова', email: '715qy08@gmail.com', birthday: '16.01.1994' },\r\n    { id: 15, name: 'Элеонора', surname: 'Калашникова', email: 'vubx0t@mail.ru', birthday: '06.07.1994' },\r\n    { id: 16, name: 'Полина', surname: 'Пестова', email: 'wnhborq@outlook.com', birthday: '10.09.1994' },\r\n    { id: 17, name: 'Жанна', surname: 'Максимова', email: 'gq@yandex.ru', birthday: '15.04.1996' },\r\n    { id: 18, name: 'Алёна', surname: 'Хитрук', email: 'ic0pu@outlook.com', birthday: '22.09.1996' },\r\n    { id: 19, name: 'Янина', surname: 'Соловьёва', email: 'o7khr@yandex.ru', birthday: '26.06.1998' },\r\n    { id: 20, name: 'Шарлота', surname: 'Молчанова', email: '2shlaq@outlook.com', birthday: '26.06.1998' }\r\n  ],\r\n  newNameText: \"\",\r\n  newSurnameText: \"\",\r\n  newEmailText: \"\",\r\n  newbirthdayText: \"\",\r\n  selectedID: null,\r\n  selectedIDRowData: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT: {\r\n      const newContacts = {\r\n        id: Math.max(...state.ContactsData.map(i => i.id)) + 1,\r\n        name: state.newNameText,\r\n        surname: state.newSurnameText,\r\n        email: state.newEmailText,\r\n        birthday: state.newbirthdayText,\r\n      };\r\n      return {\r\n        ...state,\r\n        ContactsData: [...state.ContactsData, newContacts],\r\n        newNameText: \"\",\r\n        newSurnameText: \"\",\r\n        newEmailText: \"\",\r\n        newbirthdayText: \"\",\r\n        selectedID: null,\r\n        selectedIDRowData: null\r\n      };\r\n    }\r\n    case UPDATE_CONTACT: {\r\n      return {\r\n        ...state,\r\n        ContactsData: state.ContactsData.filter(p => {\r\n          if (p.id === state.selectedID)\r\n            return (p.name = state.newNameText,\r\n              p.surname = state.newSurnameText,\r\n              p.email = state.newEmailText,\r\n              p.birthday = state.newbirthdayText)\r\n          else\r\n            return p;\r\n        }),\r\n        newNameText: \"\",\r\n        newSurnameText: \"\",\r\n        newEmailText: \"\",\r\n        newbirthdayText: \"\",\r\n        selectedID: null,\r\n        selectedIDRowData: null\r\n\r\n      }\r\n    }\r\n    case UPDATE_ID: {\r\n      return {\r\n        ...state,\r\n        selectedID: action.selectedID === state.selectedID ? null : action.selectedID,\r\n        selectedIDRowData: action.selectedIDRowData === state.selectedIDRowData ? null : action.selectedIDRowData\r\n      };\r\n    }\r\n    case DELETE_CONTACT: {\r\n      const idx = state.ContactsData.findIndex((item) => item.id === state.selectedID);\r\n      const ContactsData = [\r\n        ...state.ContactsData.slice(0, idx),\r\n        ...state.ContactsData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        ...state,\r\n        newNameText: \"\",\r\n        newSurnameText: \"\",\r\n        newEmailText: \"\",\r\n        newbirthdayText: \"\",\r\n        selectedID: null,\r\n        selectedIDRowData: null,\r\n        ContactsData: ContactsData\r\n      }\r\n    }\r\n    case UPDATE_NAME_TEXT: {\r\n\r\n      return {\r\n        ...state,\r\n        newNameText: action.newName === state.newNameText ? null : action.newName\r\n      };\r\n\r\n    }\r\n    case UPDATE_SURNAME: {\r\n\r\n      return {\r\n        ...state,\r\n        newSurnameText: action.newSurname === state.newSurnameText ? null : action.newSurname\r\n      };\r\n\r\n    }\r\n    case UPDATE_EMAIL: {\r\n\r\n      return {\r\n        ...state,\r\n        newEmailText: action.newEmail === state.newEmailText ? null : action.newEmail\r\n      };\r\n\r\n    }\r\n    case UPDATE_BIRTHDAY: {\r\n\r\n      return {\r\n        ...state,\r\n        newbirthdayText: action.newBirthday === state.newbirthdayText ? null : action.newBirthday\r\n      };\r\n\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addContactCreator = () => ({ type: ADD_CONTACT });\r\nexport const updateContactCreator = () => ({ type: UPDATE_CONTACT });\r\nexport const updateContactNameTextCreator = (name) => ({ type: UPDATE_NAME_TEXT, newName: name });\r\nexport const updateContactSurnameTextCreator = (sur) => ({ type: UPDATE_SURNAME, newSurname: sur });\r\nexport const updateContactEmailTextCreator = (email) => ({ type: UPDATE_EMAIL, newEmail: email });\r\nexport const updateContactBirthdayTextCreator = (birthday) => ({ type: UPDATE_BIRTHDAY, newBirthday: birthday });\r\nexport const deleteContactCreator = () => ({ type: DELETE_CONTACT });\r\nexport const updateContactIdCreator = (id, idRow) => ({ type: UPDATE_ID, selectedID: id, selectedIDRowData: idRow });","import { createStore, combineReducers} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport contactsReducer from \"./contacts-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    contacts: contactsReducer\r\n});\r\n\r\nlet store  = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport p from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n  let logOut = () => {\r\n    props.logOut();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`${p.container} ${'text-center'}`}>\r\n        <h3>Профиль</h3>\r\n        <p>Ваш логин: {props.user}</p>\r\n        <button onClick={logOut} className=\"btn btn-primary btn-sm\">Выйти</button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Profile\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { logOutInCreator } from '../../Redux/auth-reducer';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => {\r\n      let action = logOutInCreator();\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nconst ProfileContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Profile));\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport s from './Login.module.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        errorMsg: ''\r\n    };\r\n\r\n    checkCredentials = (params) => {\r\n        if (\r\n            params.username.toLowerCase() !== 'admin' ||\r\n            params.password !== 'admin'\r\n        ) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { username, password } = this.state;\r\n        if (this.checkCredentials({ username, password })) {\r\n            this.props.loginInCreator(username);\r\n        }\r\n        else {\r\n            this.setState({ errorMsg: 'Имя или пароль введены не верно' })\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { username, password } = this.state;\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={\"/profile\"} />;\r\n        }\r\n\r\n        return (\r\n            <div className={`${s.container} ${'text-center'}`}>\r\n                <form\r\n                    onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Имя\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Пароль\" />\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Войти\r\n                    </button>\r\n                    <div className={s.errorMessage}>\r\n                        {this.state.errorMsg}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","import { connect } from 'react-redux';\r\nimport Login from './Login';\r\nimport { loginInCreator} from '../../Redux/auth-reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps =  {\r\n    loginInCreator\r\n\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n    <header className='nav-bar'>\r\n        <NavLink to=\"/contacts\">Контакты</NavLink>\r\n        <NavLink to=\"/profile\">Профиль</NavLink>\r\n    </header>\r\n);\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport m from './Modal.module.css';\r\n\r\nconst Example = (props) => {\r\n    const [add, setShow] = useState(false);\r\n    const [deleted, setShowDel] = useState(false);\r\n    const [chenge, setChenge,] = useState(false);\r\n\r\n    const handleCloseAdd = () => setShow(false);\r\n    const handleShowAdd = () => {\r\n        props.updateContact();\r\n        setShow(true);\r\n        //props.updateNewsText(\"\");\r\n        //props.updateNewsDesc(\"\");\r\n\r\n    };\r\n\r\n\r\n    const handleCloseDel = () => setShowDel(false);\r\n    const handleShowDel = () => setShowDel(true);\r\n\r\n    const handleCloseChenge = () => setChenge(false);\r\n    const handleShowChenge = () => setChenge(true);\r\n\r\n    let newNameElement = React.createRef();\r\n    let newSurnameElement = React.createRef();\r\n    let newEmailElement = React.createRef();\r\n    let newBirthdayElement = React.createRef();\r\n\r\n    const onAddNews = () => {\r\n        props.addContact();\r\n        handleCloseAdd();\r\n    }\r\n\r\n    let onUpdateContacts = () => {\r\n        props.updateContact();\r\n        handleCloseChenge();\r\n    }\r\n\r\n    let onChangeTextName = () => {\r\n        let name = newNameElement.current.value;\r\n        props.updateContactNameText(name);\r\n\r\n    }\r\n\r\n    let onChangeSurnameText = () => {\r\n        let surname = newSurnameElement.current.value;\r\n        props.updateContactSurnameText(surname);\r\n\r\n    }\r\n\r\n    let onChangeEmailText = () => {\r\n        let email = newEmailElement.current.value;\r\n        props.updateContactEmailText(email);\r\n\r\n    }\r\n\r\n    let onChangeBirthdayText = () => {\r\n        let birthday = newBirthdayElement.current.value;\r\n        props.updateContactBirthdayText(birthday);\r\n\r\n    }\r\n\r\n    let onDeleteContacts = () => {\r\n        props.deleteContact();\r\n        handleCloseDel();\r\n    }\r\n\r\n    const chengModalBody = () => {\r\n        if (props.selectedID === null) {\r\n            return (\r\n                <div className={'form-group'}>\r\n                    Вы не выбрали новость!!!\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeTextName}\r\n                            ref={newNameElement}\r\n                            value={props.newNameText}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeSurnameText}\r\n                            ref={newSurnameElement}\r\n                            value={props.newSurnameText}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeEmailText}\r\n                            ref={newEmailElement}\r\n                            value={props.newEmailText}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeBirthdayText}\r\n                            ref={newBirthdayElement}\r\n                            value={props.newbirthdayText}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const deletedModalBody = () => {\r\n        if (props.selectedID === null) {\r\n            return (\r\n                <div className={'form-group'}>\r\n                    Вы не выбрали новость!!!\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={'form-group'}>\r\n                    Удалить новость?\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const chengModalFooter = () => {\r\n        return props.selectedID === null ?\r\n            <>\r\n                <Button variant=\"secondary\" onClick={handleCloseChenge}>Отмена</Button>\r\n            </> :\r\n            <>\r\n                <Button variant=\"secondary\" onClick={handleCloseChenge}>Отмена</Button>\r\n                <Button variant=\"primary\" onClick={onUpdateContacts}>Применить</Button>\r\n            </>\r\n    }\r\n\r\n    const deletdModalFooter = () => {\r\n        return props.selectedID === null ?\r\n            <>\r\n                <Button variant=\"secondary\" onClick={handleCloseDel}>Отмена</Button>\r\n            </> :\r\n            <>\r\n                <Button variant=\"secondary\" onClick={handleCloseDel}>Отмена</Button>\r\n                <Button variant=\"primary\" onClick={onDeleteContacts}>Применить</Button>\r\n            </>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={m.container}>\r\n                <Button className={m.btn} variant=\"primary\" onClick={handleShowAdd}>\r\n                    Добавить\r\n                </Button>\r\n                <Button className={m.btn} variant=\"primary\" onClick={handleShowChenge}>\r\n                    Изменить\r\n                </Button>\r\n                <Button className={m.btn} variant=\"primary\" onClick={handleShowDel}>\r\n                    Удалить\r\n                </Button>\r\n            </div>\r\n\r\n            <Modal show={add} onHide={handleCloseAdd}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Новая новость</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeTextName}\r\n                            ref={newNameElement}\r\n                            placeholder={\"Имя\"}\r\n                        //value={props.newNameText}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeSurnameText}\r\n                            ref={newSurnameElement}\r\n                            placeholder={\"Фамилия\"}\r\n                        //value={props.newSurnameElementription}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeEmailText}\r\n                            ref={newEmailElement}\r\n                            placeholder={\"Email\"}\r\n                        />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <input className={'form-control'}\r\n                            onChange={onChangeBirthdayText}\r\n                            ref={newBirthdayElement}\r\n                            placeholder={\"Birthday\"}\r\n                        />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseAdd}>Отмена</Button>\r\n                    <Button variant=\"primary\" onClick={onAddNews}>Применить</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={chenge} onHide={handleCloseChenge}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Изменить новость</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {chengModalBody()}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {chengModalFooter()}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={deleted} onHide={handleCloseDel}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Удаление</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {deletedModalBody()}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {deletdModalFooter()}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Example","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nexport const Table = (props) => {\r\n\r\n\tlet now = new Date().toISOString().slice(0, 10);\r\n\tlet DayMonth = now.slice(8, 10) + '.' + now.slice(5, 7)\r\n\r\n\tconst selected = (idTabl, id, name, desc, email, birthday) => {\r\n\t\tprops.updateContactId(id, idTabl);\r\n\t\tprops.updateContactNameText(name);\r\n\t\tprops.updateContactSurnameText(desc);\r\n\t\tprops.updateContactEmailText(email);\r\n\t\tprops.updateContactBirthdayText(birthday);\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{ title: 'Name', field: 'name' },\r\n\t\t{ title: 'Surname', field: 'surname' },\r\n\t\t{ title: 'Email', field: 'email' },\r\n\t\t{ title: 'Birthday', field: 'birthday' }\r\n\t]\r\n\r\n\treturn (<div>\r\n\t\t<MaterialTable title=\"\"\r\n\t\t\tdata={props.contacts}\r\n\t\t\tcolumns={columns}\r\n\t\t\tonRowClick={((evt, selectedRow) => selected(selectedRow.tableData.id, selectedRow.id, selectedRow.name, selectedRow.surname, selectedRow.email, selectedRow.birthday))}\r\n\t\t\toptions={{\r\n\t\t\t\trowStyle: rowData => ({\r\n\t\t\t\t\tbackgroundColor: (props.selectedIDRowData === rowData.tableData.id) ? '#dfd9d9' : (DayMonth === rowData.birthday.slice(0, 5)) ? 'rgba(231, 27, 27, 0.301)' : '#FFF',\r\n\t\t\t\t})\r\n\t\t\t}}\r\n\t\t/>\r\n\t</div>)\r\n}","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport { Table } from '../Table/Table';\r\n\r\nexport default class Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Modal {...this.props} />\r\n        </div>\r\n        {<div>\r\n          <Table {...this.props} />\r\n        </div>}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Contacts from './Contacts';\r\nimport { addContactCreator, updateContactCreator, updateContactNameTextCreator, deleteContactCreator, updateContactIdCreator, updateContactSurnameTextCreator, updateContactEmailTextCreator, updateContactBirthdayTextCreator } from '../../Redux/contacts-reducer';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(News);\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.ContactsData,\r\n  newNameText: state.contacts.newNameText,\r\n  selectedID: state.contacts.selectedID,\r\n  selectedIDRowData: state.contacts.selectedIDRowData,\r\n  newSurnameText: state.contacts.newSurnameText,\r\n  newEmailText: state.contacts.newEmailText,\r\n  newbirthdayText: state.contacts.newbirthdayText\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: () => {\r\n      dispatch(addContactCreator());\r\n    },\r\n    updateContact: () => {\r\n      dispatch(updateContactCreator());\r\n    },\r\n    deleteContact: () => {\r\n      dispatch(deleteContactCreator());\r\n    },\r\n    updateContactId: (idContact, idRow) => {\r\n      dispatch(updateContactIdCreator(idContact, idRow));\r\n    },\r\n    updateContactNameText: (name) => {\r\n      dispatch(updateContactNameTextCreator(name));\r\n    },\r\n    updateContactSurnameText: (sur) => {\r\n      dispatch(updateContactSurnameTextCreator(sur));\r\n    },\r\n    updateContactEmailText: (email) => {\r\n      dispatch(updateContactEmailTextCreator(email));\r\n    },\r\n    updateContactBirthdayText: (birthday) => {\r\n      dispatch(updateContactBirthdayTextCreator(birthday));\r\n    }\r\n  }\r\n}\r\n\r\nconst ContactsContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Contacts));\r\n\r\nexport default ContactsContainer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport ContactsContainer from './components/Contacts/ContactsContainer';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Route path='/contacts'\n          render={() => <ContactsContainer />} />\n        <Route path='/profile'\n          render={() => <ProfileContainer />} />\n        <Route path='/login'\n          render={() => <LoginContainer />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}